version: '1.0'
mode: parallel
stages:
- prep
- lint
- test

steps:
  clone-submodules:
    title: Clone submodules
    image: codefresh/cfstep-gitsubmodules
    environment:
    - GITHUB_TOKEN=""
    - CF_SUBMODULE_SYNC=true
    - CF_SUBMODULE_UPDATE_RECURSIVE=true
    when:
      steps:
      - name: main_clone
        on:
        - success

  lint-prep:
    type: build
    stage: prep
    title: Prep lint image
    dockerfile: Dockerfile-clang
    image_name: ${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}-lint
    when:
      steps:
      - name: clone-submodules
        on:
        - success

  lint:
    title: Run format linting
    stage: lint
    image: ${{lint-prep}}
    working_directory: ${{main_clone}}
    entrypoint: bash
    commands:
    - |-
      find include/ src/ -type f \( -iname *.h -o -iname *.cpp \) -print0 | \
        xargs -0 -I {} bash -c 'if [[ $(clang-format {} | diff - {}) ]]; then (echo {}; exit 1); else (exit 0); fi'
    when:
      steps:
      - name: lint-prep
        on:
        - success

  gcc-8-prep: &prep
    type: build
    stage: prep
    title: Prep test image gcc-8
    dockerfile: Dockerfile-gcc
    build_arguments:
    - GCC_VERSION=8
    image_name: ${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}-test
    when:
      steps:
      - name: clone-submodules
        on:
        - success

  gcc-8: &test
    title: Run test gcc-8
    stage: test
    image: ${{gcc-8-prep}}
    environment:
    - BUILD_DIR=build-gcc-8
    working_directory: ${{main_clone}}
    commands:
    - mkdir -p ${BUILD_DIR}
    - cd ${BUILD_DIR}
    - |-
      for BUILD in Debug Release; do
        (
          set -x
          cmake -DCMAKE_BUILD_TYPE="${BUILD}"              \
                -DCMAKE_INSTALL_PREFIX:PATH=install        \
                -DSPDLOG_SETUP_INCLUDE_UNIT_TESTS=ON ..
        )

        cmake --build . --target install
        ctest -R spdlog_setup_unit_test -V
        ec=$?

        (exit $ec)
      done
    when:
      steps:
      - name: gcc-8-prep
        on:
        - success

  gcc-7-prep:
    <<: *prep
    title: Prep test image gcc-7
    build_arguments:
    - GCC_VERSION=7

  gcc-7:
    <<: *test
    title: Run test gcc-7
    image: ${{gcc-7-prep}}
    environment:
    - BUILD_DIR=build-gcc-7
    when:
      steps:
      - name: gcc-7-prep
        on:
        - success

  gcc-6-prep:
    <<: *prep
    title: Prep test image gcc-6
    build_arguments:
    - GCC_VERSION=6

  gcc-6:
    <<: *test
    title: Run test gcc-6
    image: ${{gcc-6-prep}}
    environment:
    - BUILD_DIR=build-gcc-6
    when:
      steps:
      - name: gcc-6-prep
        on:
        - success

  gcc-5-prep:
    <<: *prep
    title: Prep test image gcc-5
    build_arguments:
    - GCC_VERSION=5

  gcc-5:
    <<: *test
    title: Run test gcc-5
    image: ${{gcc-5-prep}}
    environment:
    - BUILD_DIR=build-gcc-5
    when:
      steps:
      - name: gcc-5-prep
        on:
        - success

  # gcc-4.9-prep:
  #   <<: *prep
  #   title: Prep test image gcc-4.9
  #   build_arguments:
  #   - GCC_VERSION=4.9

  # gcc-4.9:
  #   <<: *test
  #   title: Run test gcc-4.9
  #   image: ${{gcc-4.9-prep}}
  #   environment:
  #   - BUILD_DIR=build-gcc-4.9
  #   when:
  #     steps:
  #     - name: gcc-4.9-prep
  #       on:
  #       - success
