version: '1.0'
mode: parallel
stages:
- prep
- lint
- test

steps:
  clone_submodules:
    title: Clone submodules
    image: codefresh/cfstep-gitsubmodules
    environment:
    - GITHUB_TOKEN=""
    - CF_SUBMODULE_SYNC=true
    - CF_SUBMODULE_UPDATE_RECURSIVE=true
    when:
      steps:
      - name: main_clone
        on:
        - success

  lint_prep:
    type: build
    stage: prep
    title: Prep lint image
    dockerfile: Dockerfile-clang
    image_name: ${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}-lint
    tag: latest
    when:
      steps:
      - name: clone_submodules
        on:
        - success

  lint:
    title: Run format linting
    stage: lint
    image: ${{lint_prep}}
    working_directory: ${{main_clone}}
    entrypoint: bash
    commands:
    - |-
      find include/ src/ -type f \( -iname *.h -o -iname *.cpp \) -print0 | \
        xargs -0 -I {} bash -c 'if [[ $(clang-format {} | diff - {}) ]]; then (echo {}; exit 1); else (exit 0); fi'
    when:
      steps:
      - name: lint_prep
        on:
        - success

  gcc_8_prep: &gcc_prep
    type: build
    stage: prep
    title: Prep test image gcc_8
    dockerfile: Dockerfile-gcc
    build_arguments:
    - GCC_VERSION=8
    image_name: ${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}-test
    tag: gcc_8
    when:
      steps:
      - name: clone_submodules
        on:
        - success

  gcc_8: &gcc_test
    title: Run test gcc_8
    stage: test
    image: ${{gcc_8_prep}}
    environment:
    - BUILD_DIR=build-gcc_8
    working_directory: ${{main_clone}}
    commands:
    - mkdir -p ${BUILD_DIR}
    - cd ${BUILD_DIR}
    - |-
      for BUILD in Debug Release; do
        (
          set -x
          cmake -DCMAKE_BUILD_TYPE="${BUILD}"              \
                -DCMAKE_INSTALL_PREFIX:PATH=install        \
                -DSPDLOG_SETUP_INCLUDE_UNIT_TESTS=ON ..
        )

        cmake --build . --target install
        ctest -R spdlog_setup_unit_test -V
        ec=$?

        (exit $ec)
      done
    when:
      steps:
      - name: gcc_8_prep
        on:
        - success

  gcc_7_prep:
    <<: *gcc_prep
    title: Prep test image gcc_7
    build_arguments:
    - GCC_VERSION=7
    tag: gcc_7

  gcc_7:
    <<: *gcc_test
    title: Run test gcc_7
    image: ${{gcc_7_prep}}
    environment:
    - BUILD_DIR=build-gcc_7
    when:
      steps:
      - name: gcc_7_prep
        on:
        - success

  # gcc_6_prep:
  #   <<: *gcc_prep
  #   title: Prep test image gcc_6
  #   build_arguments:
  #   - GCC_VERSION=6
  #   tag: gcc_6

  # gcc_6:
  #   <<: *gcc_test
  #   title: Run test gcc_6
  #   image: ${{gcc_6_prep}}
  #   environment:
  #   - BUILD_DIR=build-gcc_6
  #   when:
  #     steps:
  #     - name: gcc_6_prep
  #       on:
  #       - success

  # gcc_5_prep:
  #   <<: *gcc_prep
  #   title: Prep test image gcc_5
  #   build_arguments:
  #   - GCC_VERSION=5
  #   tag: gcc_5

  # gcc_5:
  #   <<: *gcc_test
  #   title: Run test gcc_5
  #   image: ${{gcc_5_prep}}
  #   environment:
  #   - BUILD_DIR=build-gcc_5
  #   when:
  #     steps:
  #     - name: gcc_5_prep
  #       on:
  #       - success

  # gcc_4_9_prep:
  #   <<: *gcc_prep
  #   title: Prep test image gcc_4_9
  #   build_arguments:
  #   - GCC_VERSION=4.9
  #   tag: gcc_4_9

  # gcc_4_9:
  #   <<: *gcc_test
  #   title: Run test gcc_4_9
  #   image: ${{gcc_4_9_prep}}
  #   environment:
  #   - BUILD_DIR=build-gcc_4_9
  #   when:
  #     steps:
  #     - name: gcc_4_9_prep
  #       on:
  #       - success

  clang_7_prep: &clang_prep
    type: build
    stage: prep
    title: Prep test image clang_7
    dockerfile: Dockerfile-clang
    build_arguments:
    - CLANG_VERSION=7
    image_name: ${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}-test
    tag: clang_7
    when:
      steps:
      - name: clone_submodules
        on:
        - success

  clang_7: &clang_test
    <<: *gcc_test
    title: Run test clang_7
    image: ${{clang_7_prep}}
    environment:
    - BUILD_DIR=build-clang_7
    when:
      steps:
      - name: clang_7_prep
        on:
        - success

  clang_6_prep:
    <<: *clang_prep
    title: Prep test image clang_6
    build_arguments:
    - CLANG_VERSION=6
    tag: clang_6

  clang_6:
    <<: *clang_test
    title: Run test clang_6
    image: ${{clang_6_prep}}
    environment:
    - BUILD_DIR=build-clang_6
    when:
      steps:
      - name: clang_6_prep
        on:
        - success
